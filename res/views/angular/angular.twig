{% extends 'templates/default.twig' %}
{% use 'nav.inc' %}

{% block head %}


    {{parent()}}

    <link rel="stylesheet" type="text/css" href="{{ SITEROOT }}/res/css/angular-datatables.css">
    <link rel="stylesheet" type="text/css" href="{{ SITEROOT }}/res/css/datatables.bootstrap.min.css">
    <script src="{{SITEROOT}}/res/js/ie10-viewport-bug-workaround.js"></script>
    <script src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.5/angular-resource.min.js"></script>
    <script src="https://cdn.datatables.net/s/bs/dt-1.10.10/datatables.min.js"></script>

    <script src="{{ SITEROOT }}/res/js/angular-datatables.min.js"></script>
    <script src="{{ SITEROOT }}/res/js/angular-datatables.bootstrap.min.js"></script>


{% endblock head %}

{% block content %}

    <div class="container-fluid">
        <div class="row">
            <div class="col-md-2">
                {% if flash.getMessages() %}
                    {% for k, messages in flash.getMessages() %}
                        {% for message in flash.getMessages()[k] %}
                            {% if k == 'global' %}
                                <div class="alert alert-success">{{ message }}</div>
                            {% else %}
                                <div class="alert alert-danger">{{ message }}</div>
                            {% endif %}
                        {% endfor %}
                    {% endfor %}
                {% endif %}


                {% block nav %}
                    {{ parent() }}
                {% endblock nav %}

            </div>
            <div class="col-md-8">
                <div class="panel">
                    <div class="panel-heading">
                        <div class="panel-title">
                            <h2><strong>Angular testing...</strong></h2>
                        </div>
                    </div>

                    <!-- Panel body -->
                    <div class="panel-body">
                                    <div ng-controller="WithPromiseCtrl as showCase">
                                        <table datatable=""
                                               dt-options="showCase.dtOptions"
                                               dt-columns="showCase.dtColumns"
                                               class="table table-striped table-bordered table-condensed">
                                        </table>
                                    </div>
                            <div class="row">
                                <div class="col-md-2">
                                </div>
                            </div>

                    </div>
                </div>
            </div>
            <div class="col-md-2">
                Right column. My challenges.
            </div>
        </div>
    </div>

{% endblock content %}

{% block js %}


<script type="text/javascript">

    angular.module('showcase', ['datatables',
                                'datatables.bootstrap',
                                'ngResource']
                  ).controller('WithPromiseCtrl', WithPromiseCtrl);

    function WithPromiseCtrl(DTOptionsBuilder, DTColumnBuilder, $resource) {
        var vm = this;

        vm.dtOptions = DTOptionsBuilder.fromFnPromise(function() {
            return $resource('/angularjson').query().$promise;
        }).withPaginationType('full_numbers').withBootstrap();

            //vm.dtOptions = DTOptionsBuilder
            //.fromSource('/angularjson')
            //.withBootstrap();

        vm.dtColumns = [
            DTColumnBuilder.newColumn('id').withTitle('ID'),
            DTColumnBuilder.newColumn('firstname').withTitle('First name'),
            DTColumnBuilder.newColumn('lastname').withTitle('Last name'),
//            DTColumnBuilder.newColumn('home').withTitle('Home phone'),
            DTColumnBuilder.newColumn(null).withTitle('Home phone').renderWith(homePhone),
            DTColumnBuilder.newColumn(null).withTitle('Cell').renderWith(cellPhone),
            DTColumnBuilder.newColumn(null).withTitle('Work phone').renderWith(workPhone),

            DTColumnBuilder.newColumn('email').withTitle('E-mail'),
            DTColumnBuilder.newColumn('division1').withTitle('Prim. division'),
            DTColumnBuilder.newColumn('division2').withTitle('Sec. division'),
            DTColumnBuilder.newColumn('ddivision').withTitle('Doub. division'),
        ];

        function homePhone(data, type, full, meta) {
            return phoneFormat(data.home);
        }
        function cellPhone(data, type, full, meta) {
            return phoneFormat(data.cell);
        }
        function workPhone(data, type, full, meta) {
            return phoneFormat(data.work);
        }

        function phoneFormat(tel) {
            if (!tel) { return ''; }

            var value = tel.toString().trim().replace(/^\+/, '');

            if (value.match(/[^0-9]/)) {
                return tel;
            }

            var country, city, number;

            switch (value.length) {
                case 10: // +1PPP####### -> C (PPP) ###-####
                    country = 1;
                    city = value.slice(0, 3);
                    number = value.slice(3);
                    break;

                case 11: // +CPPP####### -> CCC (PP) ###-####
                    country = value[0];
                    city = value.slice(1, 4);
                    number = value.slice(4);
                    break;

                case 12: // +CCCPP####### -> CCC (PP) ###-####
                    country = value.slice(0, 3);
                    city = value.slice(3, 5);
                    number = value.slice(5);
                    break;

                default:
                    return tel;
            }

            if (country == 1) {
                country = "";
            }

            number = number.slice(0, 3) + '-' + number.slice(3);

            return (country + " (" + city + ") " + number).trim();
        };

    }

    $(document).ready(function() {


    });

</script>

{% endblock js %}